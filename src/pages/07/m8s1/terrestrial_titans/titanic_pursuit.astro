---
import Layout from '@/layouts/Layout.astro'
import StratBoard from '@/components/StratBoard.astro'
---

<Layout title="M8S1">
  <div class="flex h-screen w-screen items-center justify-center">
    <StratBoard key="stratboard" canvasClass="h-full w-full" />
  </div>
</Layout>

<script>
  import { listenKeys } from 'nanostores'
  import { Assets, Container, Graphics, Sprite } from 'pixi.js'

  import { AoE } from '@/pixi/aoe'
  import { getScale, YmToPx } from '@/pixi/scale'
  import { setWaymark } from '@/pixi/waymark'
  import { $stratBoards } from '@/stores/stratBoards'

  import { createMaskTargetRing } from '../_target'
  import { waymarkData1234, waymarkDataAC, waymarkDataBD } from '../_waymark'
  import { create_stone_mask } from './_mask'

  import floor_img from '/assets/07/m8s1/floor_4@3x.png?url'

  const name = 'titanic_pursuit'

  listenKeys($stratBoards, ['stratboard'], async (stratBoards) => {
    const app = stratBoards.stratboard

    const container = new Container()
    container.position.set(app.screen.width / 2, app.screen.height / 2)
    app.stage.addChild(container)

    const floorTexture = await Assets.load(floor_img)
    const floor = Sprite.from(floorTexture)
    floor.anchor.set(0.5, 0.5)
    floor.scale.set(getScale(50, 0.78))
    container.addChild(floor)

    await setWaymark(container, waymarkDataAC, 0.2)
    await setWaymark(container, waymarkDataBD, 0.2)

    const bossPosition = { r: 0, deg: 0 }
    const bossRotation = 0

    // 未被石柱覆盖的部分，正常显示
    const targetRing1 = await createMaskTargetRing(bossPosition, bossRotation)
    container.addChild(targetRing1)
    const targetRingMask1 = create_stone_mask(true)
    targetRing1.mask = targetRingMask1
    container.addChild(targetRingMask1)

    // 被石柱覆盖的部分，透明度设为0.2
    const targetRing2 = await createMaskTargetRing(bossPosition, bossRotation)
    targetRing2.alpha = 0.2
    container.addChild(targetRing2)
    const targetRingMask2 = create_stone_mask(false)
    targetRing2.mask = targetRingMask2
    container.addChild(targetRingMask2)

    const aoe = AoE.createRects(
      app,
      [
        { position: { x: -7, y: 0 }, rotation: 45 },
        { position: { x: 7, y: 0 }, rotation: 45 },
      ],
      10,
      50,
    )
    container.addChild(aoe)

    await setWaymark(container, waymarkData1234, 0.65)

    const circleMask = new Graphics()
    const circleRadius = 15.1 * YmToPx
    circleMask.circle(0, 0, circleRadius)
    circleMask.fill({ color: 'white' })
    container.mask = circleMask
    container.addChild(circleMask)

    // take screenshot
    await new Promise((resolve) => setTimeout(resolve, 1000))
    const url = await app.renderer.extract.base64(app.stage)
    const screenshot = document.createElement('a')
    document.body.append(screenshot)
    screenshot.style.position = 'fixed'
    screenshot.style.top = '20px'
    screenshot.style.right = '20px'
    screenshot.download = name
    screenshot.href = url
    const image = new Image()
    image.width = app.screen.width / 4
    image.src = url
    screenshot.innerHTML = image.outerHTML
  })
</script>
