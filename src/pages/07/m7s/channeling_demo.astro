---
import Layout from '@/layouts/Layout.astro'
import StratBoard from '@/components/StratBoard.astro'
---

<Layout title="M7S">
  <div class="flex h-screen w-screen items-center justify-center">
    <StratBoard key="stratboard" class="scale-200" />
  </div>
</Layout>

<script>
  import { listenKeys } from 'nanostores'
  import { Assets, Container, Sprite } from 'pixi.js'

  import { addCoordinates, distance, scaleCoordinates } from '@/pixi/coordinates'
  import { Role } from '@/pixi/role'
  import { getScale, YmToPx } from '@/pixi/scale'
  import { setWaymark } from '@/pixi/waymark'
  import { $stratBoards } from '@/stores/stratBoards'

  import { waymarkDataDB } from './_waymark'

  import floor_img from '/assets/07/m7s/floor_p2_3@3x.png?url'
  import channeling_img from '/game/vfx/channeling/eff/chn_m0935dg2_c0p@3x.png?url'

  const name = 'channeling_demo'

  listenKeys($stratBoards, ['stratboard'], async (stratBoards) => {
    const app = stratBoards.stratboard

    const container = new Container()
    container.position.set(app.screen.width / 2, app.screen.height / 2)
    app.stage.addChild(container)

    const floorTexture = await Assets.load(floor_img)
    const floor = Sprite.from(floorTexture)
    floor.anchor.set(0.5, 0.5)
    floor.scale.set(getScale())
    container.addChild(floor)

    await setWaymark(container, waymarkDataDB, 0.65)

    const p1 = { x: -12.5, y: -20 }
    const p2 = { x: -23.5, y: -12 }
    const d = distance(p1, p2)

    const textureLength = 40 // 素材本身是40米

    const MT = new Role('tank', 'MT')
    MT.scale.set(0.4)
    MT.position = scaleCoordinates(addCoordinates(p2, { x: -0.5, y: 0.5 }), YmToPx) // 偏移一点，让角色图标移动到线头端点下方的位置
    container.addChild(MT)

    const channelingTexture = await Assets.load(channeling_img)
    const channeling = Sprite.from(channelingTexture)
    channeling.anchor.set(0.5, 0.5)
    channeling.scale.set((getScale(30) * d) / textureLength, getScale(30)) // X方向缩放
    channeling.position.set(((p1.x + p2.x) / 2) * YmToPx, ((p1.y + p2.y) / 2) * YmToPx)
    channeling.rotation = Math.atan2(p2.y - p1.y, p2.x - p1.x)
    container.addChild(channeling)

    // take screenshot
    await new Promise((resolve) => setTimeout(resolve, 1000))
    const url = await app.renderer.extract.base64(app.stage)
    const screenshot = document.createElement('a')
    document.body.append(screenshot)
    screenshot.style.position = 'fixed'
    screenshot.style.top = '20px'
    screenshot.style.right = '20px'
    screenshot.download = name
    screenshot.href = url
    const image = new Image()
    image.width = app.screen.width / 4
    image.src = url
    screenshot.innerHTML = image.outerHTML
  })
</script>
